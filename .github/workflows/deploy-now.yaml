name: Deploy Now

on:
  push:
    branches:
      - master
      - beta
  workflow_dispatch:
  repository_dispatch:
    types:
      - redeploy

jobs:
  deploy-now:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch project data
        uses: ionos-deploy-now/retrieve-project-info-action@v1
        id: project
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          project: ${{ secrets.IONOS_PROJECT_ID }}
          service-host: api-eu.ionos.space

      - name: checkout
        if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Render templates
        if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
        uses: ionos-deploy-now/template-renderer-action@v1
        id: template
        with:
          secrets: |

      - name: Setup Node
        if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
        uses: actions/setup-node@v1
        with:
          node-version: v16.x

      - if: ${{ github.ref == 'refs/heads/beta' }} || ${{ github.event.client_payload.beta }}
        name: Build Node assets BETA
        env:
          CI: true
          STRAPI_URL: ${{ secrets.DEV_STRAPI_URL }}
          STRIPE_PK: ${{ secrets.STRIPE_PK_TEST }}
          DONATION_1: ${{ secrets.DEV_DONATION_1 }}
          DONATION_2: ${{ secrets.DEV_DONATION_2 }}
          DONATION_3: ${{ secrets.DEV_DONATION_3 }}
          DONATION_4: ${{ secrets.DEV_DONATION_4 }}
          # RED_API: ${{ secrets.RED_API }}
        run: |
          npm install --global yarn
          yarn install --frozen-lockfile
          yarn build
          yarn generate
      
      - if: ${{ github.ref == 'refs/heads/master' }} && !${{ github.event.client_payload.beta }}
        name: Build Node assets MASTER
        env:
          CI: true
          STRAPI_URL: ${{ secrets.PROD_STRAPI_URL }}
          STRIPE_PK: ${{ secrets.STRIPE_PK_LIVE }}
          DONATION_1: ${{ secrets.PROD_DONATION_1 }}
          DONATION_2: ${{ secrets.PROD_DONATION_2 }}
          DONATION_3: ${{ secrets.PROD_DONATION_3 }}
          DONATION_4: ${{ secrets.PROD_DONATION_4 }}
          # RED_API: ${{ secrets.RED_API }}
        run: |
          npm install --global yarn
          yarn install --frozen-lockfile
          yarn build
          yarn generate

      - name: Deploy to IONOS
        if: ${{ steps.project.outputs.deployment-enabled == 'true' }}
        uses: ionos-deploy-now/deploy-to-ionos-action@v1
        with:
          project: ${{ secrets.IONOS_PROJECT_ID }}
          branch-id: ${{ steps.project.outputs.branch-id }}
          service-host: api-eu.ionos.space
          api-key: ${{ secrets.IONOS_API_KEY }}
          dist-folder: dist
          runtime-placeholder-files: ${{ steps.template.outputs.runtime-placeholder-files }}
